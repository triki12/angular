{"ast":null,"code":"import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nexport function windowTime(windowTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n\n    var closeWindow = function (record) {\n      var window = record.window,\n          subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    var startWindow = function () {\n      if (windowRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var window_1 = new Subject();\n        var record_1 = {\n          window: window_1,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record_1);\n        subscriber.next(window_1.asObservable());\n        subs.add(scheduler.schedule(function () {\n          return closeWindow(record_1);\n        }, windowTimeSpan));\n      }\n    };\n\n    windowCreationInterval !== null && windowCreationInterval >= 0 ? subscriber.add(scheduler.schedule(function () {\n      startWindow();\n      !this.closed && subscriber.add(this.schedule(null, windowCreationInterval));\n    }, windowCreationInterval)) : restartOnClose = true;\n    startWindow();\n\n    var loop = function (cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n\n    var terminate = function (cb) {\n      loop(function (_a) {\n        var window = _a.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n} //# sourceMappingURL=windowTime.js.map","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/laravel-angular-api-authentication-full-master/angular/node_modules/rxjs/dist/esm5/internal/operators/windowTime.js"],"names":["Subject","asyncScheduler","Subscription","operate","OperatorSubscriber","arrRemove","popScheduler","windowTime","windowTimeSpan","_a","_b","otherArgs","_i","arguments","length","scheduler","windowCreationInterval","maxWindowSize","Infinity","source","subscriber","windowRecords","restartOnClose","closeWindow","record","window","subs","complete","unsubscribe","startWindow","add","window_1","record_1","seen","push","next","asObservable","schedule","closed","loop","cb","slice","forEach","terminate","subscribe","value","consumer","err","error"],"mappings":"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","sourcesContent":["import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nexport function windowTime(windowTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxWindowSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var windowRecords = [];\n        var restartOnClose = false;\n        var closeWindow = function (record) {\n            var window = record.window, subs = record.subs;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        var startWindow = function () {\n            if (windowRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var window_1 = new Subject();\n                var record_1 = {\n                    window: window_1,\n                    subs: subs,\n                    seen: 0,\n                };\n                windowRecords.push(record_1);\n                subscriber.next(window_1.asObservable());\n                subs.add(scheduler.schedule(function () { return closeWindow(record_1); }, windowTimeSpan));\n            }\n        };\n        windowCreationInterval !== null && windowCreationInterval >= 0\n            ?\n                subscriber.add(scheduler.schedule(function () {\n                    startWindow();\n                    !this.closed && subscriber.add(this.schedule(null, windowCreationInterval));\n                }, windowCreationInterval))\n            : (restartOnClose = true);\n        startWindow();\n        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n        var terminate = function (cb) {\n            loop(function (_a) {\n                var window = _a.window;\n                return cb(window);\n            });\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            loop(function (record) {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n        return function () {\n            windowRecords = null;\n        };\n    });\n}\n//# sourceMappingURL=windowTime.js.map"]},"metadata":{},"sourceType":"module"}